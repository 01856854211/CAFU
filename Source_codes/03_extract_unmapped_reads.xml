<tool id="unmapReadsGen" name="Extract Unmapped Reads" version="17.09">
   <description></description>
    <command>
	mkdir -p /home/chenzhuod/galaxy/database/files/HISAT/genome_collection ;
	#for t in $genome_collection:
	  cat $t > /home/chenzhuod/galaxy/database/files/HISAT/genome_collection/${t.name} ;
	#end for
 	cat $mapInfo > /home/chenzhuod/galaxy/database/files/HISAT/mapping-operation_info ;
	#if $readtype.single_or_paired == "single-end"
		#for t in $readtype.R1_collection:
		  cat $t > /home/chenzhuod/galaxy/database/files/HISAT/${t.name} ;
		#end for
		bash /home/chenzhuod/galaxy/tools/CAFU/03_hisat_bam_to_unamp_SE.sh $unmap_reads ${HISAT.minIntron} ${HISAT.maxIntron} ${thread};
		Rscript /home/chenzhuod/galaxy/tools/CAFU/03_unmapReads_numStat_SE.R ;
		cat /home/chenzhuod/galaxy/database/files/HISAT/unmapRead_stat > ${unmapReadStat_se} ;
	#elif $readtype.single_or_paired == "paired-end"
		#for t in $readtype.R1_collection:
		  cat $t > /home/chenzhuod/galaxy/database/files/HISAT/${t.name} ;
		#end for
		#for t in $readtype.R2_collection:
		  cat $t > /home/chenzhuod/galaxy/database/files/HISAT/${t.name} ;
		#end for    
		bash /home/chenzhuod/galaxy/tools/CAFU/03_hisat_bam_to_unmap_PE.sh $unmap_reads_R1 $unmap_reads_R2 ${HISAT.minIntron} ${HISAT.maxIntron} ${thread};
		Rscript /home/chenzhuod/galaxy/tools/CAFU/03_unmapReads_numStat_PE.R ;
		cat /home/chenzhuod/galaxy/database/files/HISAT/unmapRead_stat > ${unmapReadStat_pe} ;
	#end if
	</command>
    <inputs>
		<param name="genome_collection" type="data_collection" label="Reference genomes sequences (as a collection)" />
		<conditional name="readtype">
			<param name="single_or_paired" type="select" label="Single-end or paired-end reads?">
				<option value="single-end" selected="true">Single-end</option>
				<option value="paired-end">Paired-end</option>
			</param>
			<when value="single-end">
				<param name="R1_collection" type="data_collection" label="Input FASTQ file (as a collection)" />
			</when>
			<when value="paired-end">
				<param name="R1_collection" type="data_collection" label="Input FASTQ file (R1 of pair, as a collection)" />
				<param name="R2_collection" type="data_collection" label="Input FASTQ file (R2 of pair, as a collection)" />
			</when>
		</conditional>	
		<param name="mapInfo" type="data" label="Mapping-operation information" />
		<section name="HISAT" title="HISAT2 parameters" expanded="True">		
			<param name="minIntron" type="integer" value="20" label="Minimum intron length"/>
			<param name="maxIntron" type="integer" value="10000" label="Maximum intron length"/>
		</section>	
		<param name="thread" type="integer" value="3" label="Threads"/>
    </inputs>
    <stdio>
	  <exit_code range="1:"  level="fatal" description="Error Running Extract Unmapped Reads" />
    </stdio>
    <outputs>
		<data name="unmap_reads" format="fastqsanger,fastqsanger.gz" label="All_unmapped_reads.fastq">
			<filter>readtype['single_or_paired'] == "single-end"</filter>
		</data>
		<data name="unmapReadStat_se" format="tabular" label="Status_of_number_of_unmapped_reads">
			<filter>readtype['single_or_paired'] == "single-end"</filter>
		</data>
		
		<data name="unmap_reads_R1" format="fastqsanger,fastqsanger.gz" label="All_unmapped_reads_R1.fastq">
			<filter>readtype['single_or_paired'] == "paired-end"</filter>
        </data>
        <data name="unmap_reads_R2" format="fastqsanger,fastqsanger.gz" label="All_unmapped_reads_R2.fastq">
			<filter>readtype['single_or_paired'] == "paired-end"</filter>
        </data> 
        <data name="unmapReadStat_pe" format="tabular" label="Status_of_number_of_unmapped_reads">
			<filter>readtype['single_or_paired'] == "paired-end"</filter>
		</data>
 
    </outputs>
      <help>
.. class:: infomark

**What it does**
		  
This function integrates several bioinformatic softwares including HISAT2 (Kim *et al*., 2015), SAMTools (Li *et al*., 2009), and BEDTools (Quinlan *et al*., 2010) to extract unmapped reads. Firstly, HISAT2 is used to align high-quality reads to reference genome. Secondly, SAMTools is used to extract unmapped alignments in SAM format from alignments generated by HISAT2 with parameter "-f 4" and converts SAM format to BAM format. Finally, BEDTools is used to convert the unmapped alignments in BAM format to FASTQ format. Of note, CAFU also supports dual RNA-Seq analysis by aligning RNA-Seq data to multiple reference genomes.

.. class:: infomark

**Inputs**

* **Reference genomes sequences (as a collection)**: A **collection** of reference genomes. `Reference genomes demo`_

.. _Reference genomes demo: https://github.com/cma2015/CAFU/blob/master/Test_data/Genomes/maize.fa.zip

* **Mapping-operation information**: A **regular** file semicolon seperated which contains two columns. The first column contains RNA-Seq ID in each experiment. The second column is the corresponding reference genome ID for each experiment (multiple reference genome sequences are seperated by comma). `Mapping-operation information for single-end RNA-Seq demo`_

.. _Mapping-operation information for single-end RNA-Seq demo: https://github.com/cma2015/CAFU/blob/master/Test_data/SE%20RNA-Seq/mapping_info

`Mapping-operation information for paired-end RNA-Seq demo`_

.. _Mapping-operation information for paired-end RNA-Seq demo: https://github.com/cma2015/CAFU/blob/master/Test_data/PE%20RNA-Seq/mapping_info

For single-end RNA-Seq data

* **Input FASTQ file (as a collection)**: A **collection** of high-quality RNA-Seq reads generated from the function **Trim Raw Reads**.

For paired-end RNA-Seq data

* **Input FASTQ file (R1 of pair, as a collection)**, **Input FASTQ file (R2 of pair, as a collection)**: **Collections** of high-quality RNA-Seq reads generated from the function **Trim Raw Reads**.
		
.. class:: infomark

**Outputs**

* **Status_of_number_of_unmapped_reads**: The number of unmapped reads per sample.

For single-end RNA-Seq data

* **All_unmapped_reads.fastq**: Unmapped reads with FASTQ format.

For paired-end RNA-Seq data

* **"All_unmapped_reads_R1.fastq"**, **"All_unmapped_reads_R2.fastq"**: Unmapped reads with FASTQ format.

.. class:: infomark

**Parameters**

* **Minimum intron length**: length of minimum intron (20 in default).

* **Maximum intron length**: length of maximum intron (10000 in default).

* **threads**: Number of threads to use (3 in default).

.. class:: infomark

**Citation**

* Kim D, Langmead B, Salzberg SL. HISAT: a fast spliced aligner with low memory requirements. Nat Methods 2015;12:357-360.

* Li H, Handsaker B, Wysoker A et al. The sequence alignment/map format and SAMtools. Bioinformatics 2009;25:2078-2079.

* Quinlan AR, Hall IM. BEDTools: a flexible suite of utilities for comparing genomic features. Bioinformatics 2010;26:841-842.

    </help>

</tool>
